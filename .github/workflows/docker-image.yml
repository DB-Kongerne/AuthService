name: Byg et Docker Image

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  docker_image_pipeline:
    name: Build Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    env:
      DOCKER_USER: ${{ secrets.DOCKER_USER }}
      IMAGE_NAME: authservice

    steps:
      - uses: actions/checkout@v4

      # Get the latest tag to determine version
      - name: Get latest tag
        id: get_tag
        run: |
          git fetch --tags
          TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "Latest tag: $TAG"
          if [ -z "$TAG" ]; then
            TAG="0.0.0"
          fi
          echo "TAG=$TAG" >> $GITHUB_ENV

      # Increment version
      - name: Increment version
        id: increment_version
        run: |
          IFS='.' read -r -a VERSION <<< "$TAG"
          MAJOR=${VERSION[0]}
          MINOR=${VERSION[1]}
          PATCH=${VERSION[2]}

          # Increment patch version
          PATCH=$((PATCH + 1))

          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "New version: $NEW_VERSION"
          echo "IMAGE_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build the Docker image
        run: docker build . -f ./Dockerfile -t ${{ env.DOCKER_USER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}

      - name: Push Docker image to Docker Hub
        run: docker push ${{ env.DOCKER_USER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}

      # Create a new tag in the repository
      - name: Create new tag
        run: |
          git tag ${{ env.IMAGE_VERSION }}
          git push origin ${{ env.IMAGE_VERSION }}
